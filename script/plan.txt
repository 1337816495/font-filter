read.js
save.js
deduplication.js
deepTraversal.js
subset.js

// TODO 检查所有函数是否使用了String.prototype.split( "" )方法，该方法有与String.prototype.length一样的bug。
// TODO 从read.js开始

🆗1 subset
    1.1 定义：（异步）根据字符串或unicode数组来子集化字体文件，该方法会对输入内容进行去重处理。
    1.2 入参：
        1.2.1 { string | Array<number> } data - 字符串（如"ABC"）或存储unicode编码的数组（如[65, 66, 67]，采用十进制）。
        1.2.2 { string } path_origin - 原始的字体文件的路径，比如"./origin.otf"。
        1.2.3 { string } path_subset - 生成的字体文件的路径，比如"./sunset.otf"。
    1.3 返回：{ Promise } - Promise代表是否成功子集化，若失败则返回{success: false, error}，否则返回{success: true,
        information}对象。其中，information属性包含successfulCharacters、successfulUnicodes、failedCharacters、
        failedUnicodes属性，它们分别代表“成功截取的字符”、“成功截取的字符的unicode”、“未能截取的字符”、“未能截取的字符的unicode”，
        并且子集化成功后会自动下载字体文件。

🆗2 write
    2.1 定义：（异步）将字符串或unicode数组存储为txt文件，该方法会对输入内容进行去重处理。
    2.2 入参：
        2.2.1 { string | Array<number> } - 字符串（如"ABC"）或存储unicode编码的数组（如[65, 66, 67]，采用十进制），若传入的是
        字符串，则txt文件将存储字符串，若传入的是unicode数组，则txt文件将存储以逗号分隔的十进制的unicode编码。
        2.2.2 { string } - txt文件的地址，比如"./character-set.txt"。
    2.3 返回：{ Promise } - Promise代表是否写入成功，若成功则返回{success: true}对象，否则返回{success: false, error}对象。

🆗3 read：
    3.1 定义：（异步）读取一个使用utf-8编码的文本文件或一个文件夹内所有的此类文本文件，该方法会对读取的内容进行去重处理。
    3.2 入参：
        3.2.1 { string } - 文件或文件夹的路径，比如"./characters.txt"或"./directory"。
        3.2.2 { boolean } - 默认值为false，当值为false时，文本的内容是什么，读取的结果就是什么。
            当值为true时，程序会认为文本的内容是以逗号分隔的unicode（基于十进制），读取的结果则是unicode数组。
    3.2 返回：{ Promise } - Promise代表是否读取成功，若成功则返回{success: true, content}对象，
        否则返回{success: false, error}对象。

4 读取html文件的标签的内容，或者深度遍历读取一个文件夹内的所有html文件的标签的内容：
    4.1 入参：
        4.1.1 文件路径或目录
        4.1.2 （可选）标签名数组
    4.2 返回：标签内容

🆗5 convert
    5.1 定义：将字符串转换为unicode数组，或者将unicode数组转换为字符串。
    5.2 入参：
        5.2.1 { string | Array<number> } - 字符串（如"ABC"）或存储unicode编码的数组（如[65, 66, 67]，采用十进制）。
    5.3 返回：{ string | Array<number> } - 若入参是字符串，则输出unicode数组，若入参是unicode数组，则输出字符串。

🆗6 deduplication
    6.1 定义：（内部方法）对字符串或unicode数组进行去重。
    6.2 入参：
        6.2.1 { string | Array<number> } data - 字符串（如"ABC"）或存储unicode编码的数组（如[65, 66, 67]，采用十进制）。
    6.3 返回：{ string | Array<number> } - 若入参是unicode数组，则输出unicode数组，若入参是字符串，则输出字符串。
