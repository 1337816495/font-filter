// TODO:
// 1 修复read和parseHtml的bug。
// 2 支持otf、ttf、woff、woff2。

🆗1 subset
    1.1 定义：（异步）根据字符串或unicode数组来子集化字体文件，该方法会对输入内容进行去重处理。
    1.2 入参：
        1.2.1 { string | Array<number> } data - 字符串（如"ABC"）或存储unicode编码的数组（如[65, 66, 67]，采用十进制）。
        1.2.2 { string } path_origin - 原始的字体文件的路径，比如"./origin.otf"。
        1.2.3 { string } path_subset - 生成的字体文件的路径，比如"./sunset.otf"。
    1.3 返回：{ Promise } - Promise代表是否成功子集化，若失败则返回{success: false, error}，否则返回{success: true,
        information}对象。其中，information属性包含successfulCharacters、successfulUnicodes、failedCharacters、
        failedUnicodes属性，它们分别代表“成功截取的字符”、“成功截取的字符的unicode”、“未能截取的字符”、“未能截取的字符的unicode”，
        并且子集化成功后会自动下载字体文件。

🆗2 write
    2.1 定义：（异步）将字符串或unicode数组存储为txt文件，该方法会对输入内容进行去重处理。
    2.2 入参：
        2.2.1 { string | Array<number> } - 字符串（如"ABC"）或存储unicode编码的数组（如[65, 66, 67]，采用十进制），若传入的是
        字符串，则txt文件将存储字符串，若传入的是unicode数组，则txt文件将存储以逗号分隔的unicode（基于十进制）。
        2.2.2 { string } - txt文件的地址，比如"./character-set.txt"。
    2.3 返回：{ Promise } - Promise代表是否写入成功，若成功则返回{success: true}对象，否则返回{success: false, error}对象。

🆗3 read：
    3.1 定义：（异步）读取一个使用utf-8编码的文本文件或一个文件夹内所有的此类文本文件。
    3.2 入参：
        3.2.1 { string } - 文件或文件夹的路径，比如"./characters.txt"或"./directory"。
        3.2.2 { boolean } - 默认值为false，当值为false时，文本的内容是什么，读取的结果就是什么。
            当值为true时，程序会认为文本的内容是以逗号分隔的unicode（基于十进制），读取的结果则是unicode数组。
    3.2 返回：{ Promise } - Promise代表是否读取成功，若失败则返回{success: false, error}对象，否则返回
            {success: true, files}对象，其中files属性是拥有至少一个{name, path, content}对象的数组。
    3.3 BUG：在MacOS下，如果目录中存在.DS_Store文件，则该方法也会读取到该文件。

🆗4 parseHtml：
    4.1 定义：提取html文本的标签的内容。
    4.2 入参：
        4.2.1 { string } - html文本的内容，比如使用read方法读取html文件所得到的字符串，html文本中的标签名既可以是大写也可以是小写。
        4.2.2 { undefined | Array<string> } （可选）默认值为undefined，当值为undefined时，该方法会提取所有标签的内容。当值为
        [ "h1", "h2", "h3" ]时，该方法会提取所有h1、h2、h3标签的内容，同理类推...注意，1.不能输入自闭合标签，比如[ "img" ]；2.既
        可以输入大写的标签，也可以输入小写的标签，比如[ "h1" ]和[ "H1" ]是等价的。
    4.3 返回：{ string } - 标签的内容。
    4.4 BUG：当文档中使用转义字符（如&gt;）时，该方法会把它当成字符串来解析，而不是解析转义字符转译后的字符。如果用户使用了iconfont的
        转义字符时，又该怎么解析他们呢？？？

🆗5 convert
    5.1 定义：将字符串转换为unicode数组，或者将unicode数组转换为字符串。
    5.2 入参：
        5.2.1 { string | Array<number> } - 字符串（如"ABC"）或存储unicode编码的数组（如[65, 66, 67]，采用十进制）。
    5.3 返回：{ string | Array<number> } - 若入参是字符串，则输出unicode数组，若入参是unicode数组，则输出字符串。

🆗6 deduplication
    6.1 定义：（内部方法）对字符串或unicode数组进行去重。
    6.2 入参：
        6.2.1 { string | Array<number> } data - 字符串（如"ABC"）或存储unicode编码的数组（如[65, 66, 67]，采用十进制）。
    6.3 返回：{ string | Array<number> } - 若入参是unicode数组，则输出unicode数组，若入参是字符串，则输出字符串。
